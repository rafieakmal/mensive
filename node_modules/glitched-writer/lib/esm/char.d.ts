import GlitchedWriter from './index';
export default class Char {
    l: string;
    gl: string;
    stepsLeft: number;
    ghostsBefore: string[];
    ghostsAfter: string[];
    writer: GlitchedWriter;
    stop: boolean;
    isTag: boolean;
    isWhitespace: boolean;
    afterGlitchChance: number;
    els?: {
        charEl?: HTMLSpanElement;
        ghostsBeforeEl: HTMLSpanElement;
        letterEl: HTMLSpanElement;
        ghostsAfterEl: HTMLSpanElement;
    };
    constructor(writer: GlitchedWriter, l: string, gl: string, initialGhosts?: string, isTag?: boolean);
    private setProps;
    reset(l: string, gl: string, initialGhosts?: string, isTag?: boolean): void;
    get string(): string;
    get finished(): boolean;
    get interval(): number;
    private writeToElement;
    set spanElement(el: HTMLSpanElement);
    private appendChildren;
    type(): Promise<boolean>;
    step(): void;
    private addGhost;
    private removeGhost;
}
